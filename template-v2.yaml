AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Daily Resource Deleteion for unwanted spending 
Parameters:
  DynamodbName:
    Type: String
    Default: "AWS-Service-List"
    Description: Name of the DynamoDB table Name
  S3BucketNameReport:
    Type: String
    Default: "aws-scan-service-bucket-${AWS::AccountId}"
    Description: Name of the s3 bucket name for storing csv files
  #S3BucketName:
    #Type: String
    #Default: "aws-lambda-fn-bucket-${AWS::AccountId}"
    #Description: Name of the s3 bucket name for storing lambda fn
  SNSEmail:
    Type: String
    Default: "abc@example.com"
    Description: Recive notification related deletion of resources 

Globals:
  Function:
    Runtime: python3.10
    Timeout: 900
    Handler: lambda_function.lambda_handler
    #Environment: 
      #TABLE_NAME: !Ref DynamodbName
    Tracing: Active
    #TracingConfig:
      #Mode: Active

Resources:
  SNSTopicNotification:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: AWS_Resource_Status
      TopicName: AWS_Resource_Status
      Subscription:
        - Endpoint: !Ref SNSEmail
          Protocol: email
      Tags:
        - Key: Retain
          Value: "True"

  AWSPytzLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.10
      Content:
        S3Bucket: !Ref S3BucketName 
        S3Key: layer.zip
      #Description:
      LayerName: pytz-layer
      #Tag:
        #- Key: Retain
          #Value: "True"

  AWSPytzLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      CompatibleRuntimes:
        - python3.10
      ContentUri: layer/
      LayerName: pytz-layer

  AWSLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
      Tags:
        - Key: Retain
          Value: "True"

  AWSScanFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.10
      Role: !GetAtt AWSLambdaIAMRole.Arn
      Handler: lambda_function.lambda_handler
      #TracingConfig:
        #Mode: Active
      Timeout: 900
      Layers:
        - !Ref AWSPytzLayer
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamodbName
      #CodeUri: 's3://aws-lambda-fn-bucket-272218102380/AWS-Service-Scan-Function-v2.zip'
      CodeUri: AWS-Service-Scan-Function-v2/
      #Code:
        #S3Bucket: !Ref S3BucketName
        #S3Key: AWS-Service-Scan-Function-v2.zip
      #EventInvokeConfigs:
      Events:
        ConfigTrigger:
          Type: EventBridgeRule
          Properties:
            EventBusName: default
            #Description:
            Pattern:
              source:
                - aws.config
              detail-type:
                - Config Configuration Item Change
            RuleName: AWS-Scan-Config
            #RoleArn:
            State: ENABLED
            Target:
              #- Arn: !GetAtt AWSScanFunction.Arn
              Id: AWSScanFunction
      Tags:
        Retain: "True"

  AWSDeleteFunction:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.10
      Role: !GetAtt AWSLambdaIAMRole.Arn
      Handler: lambda_function.lambda_handler
      #TracingConfig:
        #Mode: Active
      Timeout: 900
      Layers:
        - !Ref AWSPytzLayer
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamodbName
          BUCKET_NAME: !Ref S3BucketNameReport
          SNS_ARN: !GetAtt SNSTopicNotification.TopicArn
      #CodeUri: 's3://aws-lambda-fn-bucket-272218102380/AWS-Service-Delete-Function-v2.zip'
      CodeUri: AWS-Service-Delete-Function-v2/
      #Code:
        #S3Bucket: !Ref S3BucketName
        #S3Key: AWS-Service-Scan-Function-v2.zip
      #EventInvokeConfigs:
      Events:
        Trigger1:
          Type: ScheduleV2
          Properties:
            Description: "Delete Operation performed at 6pm"
            #EndDate: String
            FlexibleTimeWindow:
              MaximumWindowInMinutes: 1
              Mode: FLEXIBLE
            #GroupName: String
            #KmsKeyArn: String
            RoleArn: !GetAtt EventBridgeIAMRole.Arn
            Name: "Event-Delete-18"
            ScheduleExpression: "cron(00 18 * * ? *)"
            ScheduleExpressionTimezone: Asia/Kolkata
            #StartDate: String
            State: ENABLED
        Trigger2:
          Type: ScheduleV2
          Properties:
            Description: "Delete Operation performed at 12am"
            #EndDate: String
            FlexibleTimeWindow:
              MaximumWindowInMinutes: 1
              Mode: FLEXIBLE
            #GroupName: String
            #KmsKeyArn: String
            RoleArn: !GetAtt EventBridgeIAMRole.Arn
            Name: "Event-Delete-24"
            ScheduleExpression: "cron(00 00 * * ? *)"
            ScheduleExpressionTimezone: Asia/Kolkata
            #StartDate: String
            State: ENABLED
      Tags:
        Retain: "True"

  #EventScanRule:
    #Type: 'AWS::Events::Rule'
    #Properties:
      #EventBusName: default
      #Description:
      #EventPattern:
        #source:
          #- aws.config
        #detail-type:
          #- Config Configuration Item Change
      #Name: AWS-Scan-Config
      #RoleArn: 
      #State: ENABLED
      #Targets:
        #- Arn: !GetAtt AWSScanFunction.Arn
          #Id: !Ref AWSScanFunction
        #RoleArn:
      #Tags:
        #- Key: Retain
          #Value: "True"
  
  AWSScanList:
    Type: AWS::DynamoDB::Table
    Properties:
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      AttributeDefinitions:
        - AttributeName: resourceId
          AttributeType: S
        - AttributeName: resourceType
          AttributeType: S
        #- AttributeName: awsRegion
          #AttributeType: S
        #- AttributeName: configurationItemStatus
          #AttributeType: S
        #- AttributeName: resource_status
          #AttributeType: S
        #- AttributeName: resourceName
          #AttributeType: S
        #- AttributeName: time_of_crud_past_18
          #AttributeType: S
      KeySchema:
        - AttributeName: resourceId
          KeyType: HASH
        - AttributeName: resourceType
          KeyType: RANGE
      TableName: !Ref DynamodbName
      Tags:
        - Key: Retain
          Value: "True"

  S3BucketReport:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
              #KMSMasterKeyID:
            BucketKeyEnabled: true
      BucketName: !Ref S3BucketNameReport
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
      VersioningConfiguration:
        Status: "Suspended"
      Tags:
        - Key: Retain
          Value: "True"

  S3BucketReportPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketReport
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: RequireSSLOnly
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            #Resource: !Join ['', ['arn:aws:s3:::', !Ref S3BucketReport, '/*']]
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - !Ref S3BucketReport
                  - "/*"
            Condition:
              Bool:
                aws:SecureTransport: false

  EventBridgeIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: Invoke-AWS-Delete-Lambda
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: v1
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: 
                  - !Join ['', [!GetAtt AWSDeleteFunction.Arn]]
                  - !Join ['', [!GetAtt AWSDeleteFunction.Arn, ':*']]
      Tags:
        - Key: Retain
          Value: "True"

